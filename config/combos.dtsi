/*                KEY POSITIONS

  ╭─────────────────────╮ ╭─────────────────────╮
  │ LT4 LT3 LT2 LT1 LT0 │ │ RT0 RT1 RT2 RT3 RT4 │
  │ LM4 LM3 LM2 LM1 LM0 │ │ RM0 RM1 RM2 RM3 RM4 │
  │ LB4 LB3 LB2 LB1 LB0 │ │ RB0 RB1 RB2 RB3 RB4 │
  ╰───────╮ LH2 LH1 LH0 │ │ RH0 RH1 RH2 ╭───────╯
          ╰─────────────╯ ╰─────────────╯ */

/* Extra mods */

#define HYPER(x) LS(LC(LA(LG(x))))

#define COMBO_REQUIRE_PRIOR_IDLE_MS 120
#define COMBO_REQUIRE_PRIOR_IDLE_MS_SLOW 250
#define COMBO_TERM_FAST 50
#define COMBO_TERM_SLOW 80
#define COMBO_SAME_FINGER 100

ZMK_COMBO(esc       , &kp ESC       , LT3 LT2, base nav, COMBO_TERM_FAST, COMBO_REQUIRE_PRIOR_IDLE_MS)
ZMK_COMBO(bspc      , &kp BSPC      , LT2 LT1, base nav, COMBO_TERM_FAST, COMBO_REQUIRE_PRIOR_IDLE_MS)

ZMK_COMBO(at        , &kp AT        , LT3 LM3, base, COMBO_TERM_SLOW, COMBO_REQUIRE_PRIOR_IDLE_MS)
ZMK_COMBO(pound     , &kp POUND     , LT2 LM2, base, COMBO_TERM_SLOW, COMBO_REQUIRE_PRIOR_IDLE_MS)
ZMK_COMBO(dollar    , &kp DOLLAR    , LT1 LM1, base, COMBO_TERM_SLOW, COMBO_REQUIRE_PRIOR_IDLE_MS)
ZMK_COMBO(percent   , &kp PERCENT   , LT0 LM0, base, COMBO_TERM_SLOW, COMBO_REQUIRE_PRIOR_IDLE_MS)

ZMK_COMBO(tab       , &kp TAB       , LM3 LM2, base    , COMBO_TERM_FAST, COMBO_REQUIRE_PRIOR_IDLE_MS)
ZMK_COMBO(enter     , &kp ENTER     , LM1 LM0, base nav, COMBO_SAME_FINGER, COMBO_REQUIRE_PRIOR_IDLE_MS)

ZMK_COMBO(grave     , &kp GRAVE     , LM3 LB3, base, COMBO_TERM_SLOW, COMBO_REQUIRE_PRIOR_IDLE_MS)
ZMK_COMBO(backslash , &kp BACKSLASH , LM2 LB2, base, COMBO_TERM_SLOW, COMBO_REQUIRE_PRIOR_IDLE_MS)
ZMK_COMBO(equal     , &kp EQUAL     , LM1 LB1, base, COMBO_TERM_SLOW, COMBO_REQUIRE_PRIOR_IDLE_MS)
ZMK_COMBO(tilde     , &kp TILDE     , LM0 LB0, base, COMBO_TERM_SLOW, COMBO_REQUIRE_PRIOR_IDLE_MS)

ZMK_COMBO(cut       , &kp LG(X)     , LB4 LB3, base, COMBO_TERM_FAST, COMBO_REQUIRE_PRIOR_IDLE_MS)
ZMK_COMBO(copy      , &kp LG(C)     , LB3 LB2, base, COMBO_TERM_FAST, COMBO_REQUIRE_PRIOR_IDLE_MS)
ZMK_COMBO(paste     , &kp LG(V)     , LB2 LB1, base, COMBO_TERM_FAST, COMBO_REQUIRE_PRIOR_IDLE_MS)

ZMK_COMBO(bspc2     , &kp BSPC      , RT1 RT2, base nav, COMBO_TERM_FAST, COMBO_REQUIRE_PRIOR_IDLE_MS)
ZMK_COMBO(del       , &kp DEL       , RT2 RT3, base    , COMBO_TERM_FAST, COMBO_REQUIRE_PRIOR_IDLE_MS)

ZMK_COMBO(caret     , &kp CARET     , RT0 RM0, base, COMBO_TERM_SLOW, COMBO_REQUIRE_PRIOR_IDLE_MS)
ZMK_COMBO(plus      , &kp PLUS      , RT1 RM1, base, COMBO_TERM_SLOW, COMBO_REQUIRE_PRIOR_IDLE_MS)
ZMK_COMBO(astrk     , &kp ASTRK     , RT2 RM2, base, COMBO_TERM_SLOW, COMBO_REQUIRE_PRIOR_IDLE_MS)
ZMK_COMBO(amps      , &kp AMPS      , RT3 RM3, base, COMBO_TERM_SLOW, COMBO_REQUIRE_PRIOR_IDLE_MS)

ZMK_COMBO(enter2    , &kp ENTER     , RM0 RM1, base, COMBO_SAME_FINGER, COMBO_REQUIRE_PRIOR_IDLE_MS)

ZMK_COMBO(underscore, &kp UNDERSCORE, RM0 RB0, base, COMBO_TERM_SLOW, COMBO_REQUIRE_PRIOR_IDLE_MS)
ZMK_COMBO(minus     , &kp MINUS     , RM1 RB1, base, COMBO_TERM_SLOW, COMBO_REQUIRE_PRIOR_IDLE_MS)
ZMK_COMBO(slash     , &kp SLASH     , RM2 RB2, base, COMBO_TERM_SLOW, COMBO_REQUIRE_PRIOR_IDLE_MS)
ZMK_COMBO(pipe      , &kp PIPE      , RM3 RB3, base, COMBO_TERM_SLOW, COMBO_REQUIRE_PRIOR_IDLE_MS)


ZMK_COMBO(hyper_o   , &kp HYPER(O)  , LM1 RM1, base, COMBO_TERM_FAST, COMBO_REQUIRE_PRIOR_IDLE_MS_SLOW)
ZMK_COMBO(hyper_s   , &kp HYPER(S)  , LB1 LB1, base, COMBO_TERM_FAST, COMBO_REQUIRE_PRIOR_IDLE_MS_SLOW)